---

daemonset:
  affinity: {}
  # Extra environment variables for Metricbeat container.
  envFrom: []
  # - configMapRef:
  #     name: config-secret
  extraEnvs: 
    - name: ELASTICSEARCH_HOSTS
      value: quickstart-es-http
    - name: ELASTICSEARCH_PASS
      valueFrom:
        secretKeyRef:
          key: elastic
          name: quickstart-es-elastic-user
    - name: MONGO_PASS
      valueFrom:
        secretKeyRef:
          key: mongodb-root-password
          name: bilbo-mongo-mongodb

  extraVolumes: 
    - name: elasticsearch-certs
      secret:
        defaultMode: 420
        optional: false
        secretName: quickstart-es-http-certs-public
    - name: kibana-certs
      secret:
        defaultMode: 420
        optional: false
        secretName: quickstart-kb-http-certs-public
  extraVolumeMounts: 
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true
    - name: elasticsearch-certs
      mountPath: /usr/share/metricbeat/config/elasticsearch-certs
      readOnly: true
    - name: kibana-certs
      mountPath: /usr/share/metricbeat/config/kibana-certs
      readOnly: true      
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true
  hostNetworking: false
  # Allows you to add any config files in /usr/share/metricbeat
  # such as metricbeat.yml for daemonset
  metricbeatConfig:
    metricbeat.yml: |
      metricbeat.modules:
      - module: mongodb
        hosts: ["mongodb://root:${MONGO_PASS}@bilbo-mongo-mongodb:27017"]
      - module: coredns
        metricsets:
        - stats
        period: 10s
        hosts: ["kube-dns.kube-system:53"]
      - module: elasticsearch
        metricsets:
        - node
        - node_stats
        - index
        - index_recovery
        - index_summary
        - shard
        - ml_job
        period: 10s
        hosts: https://quickstart-es-http:9200
        username: "elastic"
        password: '${ELASTICSEARCH_PASS}'
        ssl.certificate_authorities: ["/usr/share/metricbeat/config/elasticsearch-certs/tls.crt"]      
      output.elasticsearch:
        hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'
        username: "elastic"
        password: '${ELASTICSEARCH_PASS}'
        protocol: https
        ssl.certificate_authorities:
          - /usr/share/metricbeat/config/elasticsearch-certs/tls.crt
      setup.kibana.host: quickstart-kb-http:5601
      setup.kibana.protocol: "https"
      setup.kibana.username: "elastic"
      setup.kibana.password: '${ELASTICSEARCH_PASS}'
      setup.kibana.ssl.enabled: true
      setup.kibana.ssl.certificate_authorities: ["/usr/share/metricbeat/config/kibana-certs/tls.crt"]
      setup.dashboards.enabled: true
  nodeSelector: {}
  # A list of secrets and their paths to mount inside the pod
  # This is useful for mounting certificates for security other sensitive values
  secretMounts: []
  #  - name: metricbeat-certificates
  #    secretName: metricbeat-certificates
  #    path: /usr/share/metricbeat/certs
  # Various pod security context settings. Bear in mind that many of these have an impact on metricbeat functioning properly.
  # - Filesystem group for the metricbeat user. The official elastic docker images always have an id of 1000.
  # - User that the container will execute as. Typically necessary to run as root (0) in order to properly collect host container logs.
  # - Whether to execute the metricbeat containers as privileged containers. Typically not necessarily unless running within environments such as OpenShift.
  securityContext:
    #runAsUser: 0
    privileged: false
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "1000m"
      memory: "200Mi"
  tolerations: []

deployment:
  affinity: {}
  # Extra environment variables for Metricbeat container.
  envFrom: []
  # - configMapRef:
  #     name: config-secret
  extraEnvs: 
    - name: ELASTICSEARCH_HOSTS
      value: quickstart-es-http
    - name: ELASTICSEARCH_PASS
      valueFrom:
        secretKeyRef:
          key: elastic
          name: quickstart-es-elastic-user
  #  - name: MY_ENVIRONMENT_VAR
  #    value: the_value_goes_here
  # Allows you to add any config files in /usr/share/metricbeat
  extraVolumes: 
    - name: elasticsearch-certs
      secret:
        defaultMode: 420
        optional: false
        secretName: quickstart-es-http-certs-public       
  extraVolumeMounts: 
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true
    - name: elasticsearch-certs
      mountPath: /usr/share/metricbeat/config/elasticsearch-certs
      readOnly: true
  # such as metricbeat.yml for deployment

  metricbeatConfig:
    metricbeat.yml: |
      metricbeat.modules:
      - module: mongodb
        hosts: ["mongodb://root:${MONGO_PASS}@bilbo-mongo-mongodb:27017"]
      - module: coredns
        metricsets:
        - stats
        period: 10s
        hosts: ["kube-dns.kube-system:53"]
      - module: elasticsearch
        metricsets:
        - node
        - node_stats
        - index
        - index_recovery
        - index_summary
        - shard
        - ml_job
        period: 10s
        hosts: https://quickstart-es-http:9200
        username: "elastic"
        password: '${ELASTICSEARCH_PASS}'
        ssl.certificate_authorities: ["/usr/share/metricbeat/config/elasticsearch-certs/tls.crt"]      
      output.elasticsearch:
        hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'
        username: "elastic"
        password: '${ELASTICSEARCH_PASS}'
        protocol: https
        ssl.certificate_authorities:
          - /usr/share/metricbeat/config/elasticsearch-certs/tls.crt
      setup.kibana.host: quickstart-kb-http:5601
      setup.kibana.protocol: "https"
      setup.kibana.username: "elastic"
      setup.kibana.password: '${ELASTICSEARCH_PASS}'
      setup.kibana.ssl.enabled: true
      setup.kibana.ssl.certificate_authorities: ["/usr/share/metricbeat/config/kibana-certs/tls.crt"]
      setup.dashboards.enabled: true
  nodeSelector: {}
  # A list of secrets and their paths to mount inside the pod
  # This is useful for mounting certificates for security other sensitive values
  secretMounts: []
  #  - name: metricbeat-certificates
  #    secretName: metricbeat-certificates
  #    path: /usr/share/metricbeat/certs
  securityContext:
    runAsUser: 0
    privileged: false
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "1000m"
      memory: "200Mi"
  tolerations: []

# Replicas being used for the kube-state-metrics metricbeat deployment
replicas: 1

extraContainers: ""
# - name: dummy-init
#   image: busybox
#   command: ['echo', 'hey']

extraInitContainers: ""
# - name: dummy-init
#   image: busybox
#   command: ['echo', 'hey']

# Root directory where metricbeat will write data to in order to persist registry data across pod restarts (file position and other metadata).
hostPathRoot: /var/lib

image: "docker.elastic.co/beats/metricbeat"
imageTag: "7.7.0"
imagePullPolicy: "IfNotPresent"
imagePullSecrets: []

livenessProbe:
  exec:
    command:
      - sh
      - -c
      - |
        #!/usr/bin/env bash -e
        curl --fail 127.0.0.1:5066
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

readinessProbe:
  exec:
    command:
      - sh
      - -c
      - |
        #!/usr/bin/env bash -e
        metricbeat test output
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

# additionals labels
labels: {}

# Whether this chart should self-manage its service account, role, and associated role binding.
managedServiceAccount: false

clusterRoleRules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - nodes/stats
  verbs: ["get"]

podAnnotations: {}
  # iam.amazonaws.com/role: es-cluster

# Custom service account override that the pod will use
serviceAccount: ""

# How long to wait for metricbeat pods to stop gracefully
terminationGracePeriod: 30

# This is the PriorityClass settings as defined in
# https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
priorityClassName: ""

updateStrategy: RollingUpdate

# Override various naming aspects of this chart
# Only edit these if you know what you're doing
nameOverride: ""
fullnameOverride: ""

# DEPRECATED
affinity: {}
envFrom: []
extraEnvs: []
extraVolumes: []
extraVolumeMounts: []
# Allows you to add any config files in /usr/share/metricbeat
# such as metricbeat.yml for both daemonset and deployment
metricbeatConfig: {}
nodeSelector: {}
podSecurityContext: {}
resources: {}
secretMounts: []
tolerations: []
